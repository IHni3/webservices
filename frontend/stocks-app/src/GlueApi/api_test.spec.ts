/**
 * Glue
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("ExchangeItemsApi", () => {
  let instance: api.ExchangeItemsApi
  beforeEach(function() {
    instance = new api.ExchangeItemsApi(config)
  });

  test("apiExchangeItemsPost", () => {
    const currencyCode: string = "currencyCode_example"
    return expect(instance.apiExchangeItemsPost(currencyCode, {})).resolves.toBe(null)
  })
})

describe("OverviewItemsApi", () => {
  let instance: api.OverviewItemsApi
  beforeEach(function() {
    instance = new api.OverviewItemsApi(config)
  });

  test("apiOverviewItemsPost", () => {
    const token: string = "token_example"
    return expect(instance.apiOverviewItemsPost(token, {})).resolves.toBe(null)
  })
})

describe("PlottingItemsApi", () => {
  let instance: api.PlottingItemsApi
  beforeEach(function() {
    instance = new api.PlottingItemsApi(config)
  });

  test("apiPlottingItemsPost", () => {
    const symbol: string = "symbol_example"
    const intervall: string = "intervall_example"
    return expect(instance.apiPlottingItemsPost(symbol, intervall, {})).resolves.toBe(null)
  })
})

describe("SearchItemsApi", () => {
  let instance: api.SearchItemsApi
  beforeEach(function() {
    instance = new api.SearchItemsApi(config)
  });

  test("apiSearchItemsPost", () => {
    const search: string = "search_example"
    return expect(instance.apiSearchItemsPost(search, {})).resolves.toBe(null)
  })
})

describe("TableItemsApi", () => {
  let instance: api.TableItemsApi
  beforeEach(function() {
    instance = new api.TableItemsApi(config)
  });

  test("apiTableItemsPost", () => {
    const id: string = "id_example"
    return expect(instance.apiTableItemsPost(id, {})).resolves.toBe(null)
  })
})

